/*
 * This file is generated by jOOQ.
*/
package be.yildiz.server.generated.database.tables;


import be.yildiz.server.generated.database.Keys;
import be.yildiz.server.generated.database.Yildizdatabase;
import be.yildiz.server.generated.database.tables.records.MessagesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Messages extends TableImpl<MessagesRecord> {

    private static final long serialVersionUID = -747092522;

    /**
     * The reference instance of <code>YILDIZDATABASE.MESSAGES</code>
     */
    public static final Messages MESSAGES = new Messages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MessagesRecord> getRecordType() {
        return MessagesRecord.class;
    }

    /**
     * The column <code>YILDIZDATABASE.MESSAGES.MSG_ID</code>.
     */
    public final TableField<MessagesRecord, UInteger> MSG_ID = createField("MSG_ID", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>YILDIZDATABASE.MESSAGES.SENDER_ID</code>.
     */
    public final TableField<MessagesRecord, UShort> SENDER_ID = createField("SENDER_ID", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>YILDIZDATABASE.MESSAGES.RECEIVER_ID</code>.
     */
    public final TableField<MessagesRecord, UShort> RECEIVER_ID = createField("RECEIVER_ID", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>YILDIZDATABASE.MESSAGES.MESSAGE</code>.
     */
    public final TableField<MessagesRecord, String> MESSAGE = createField("MESSAGE", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>YILDIZDATABASE.MESSAGES.READ</code>.
     */
    public final TableField<MessagesRecord, Boolean> READ = createField("READ", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>YILDIZDATABASE.MESSAGES.DATE</code>.
     */
    public final TableField<MessagesRecord, Timestamp> DATE = createField("DATE", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>YILDIZDATABASE.MESSAGES</code> table reference
     */
    public Messages() {
        this("MESSAGES", null);
    }

    /**
     * Create an aliased <code>YILDIZDATABASE.MESSAGES</code> table reference
     */
    public Messages(String alias) {
        this(alias, MESSAGES);
    }

    private Messages(String alias, Table<MessagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Messages(String alias, Table<MessagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Yildizdatabase.YILDIZDATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MessagesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MESSAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MessagesRecord> getPrimaryKey() {
        return Keys.KEY_MESSAGES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MessagesRecord>> getKeys() {
        return Arrays.<UniqueKey<MessagesRecord>>asList(Keys.KEY_MESSAGES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Messages as(String alias) {
        return new Messages(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Messages rename(String name) {
        return new Messages(name, null);
    }
}
