/**
 * This class is generated by jOOQ
 */
package be.yildiz.server.generated.database;


import be.yildiz.server.generated.database.tables.*;
import be.yildiz.server.generated.database.tables.records.*;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>yildizdatabase</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AccountRecord, UShort> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
	public static final Identity<EntitiesRecord, UInteger> IDENTITY_ENTITIES = Identities0.IDENTITY_ENTITIES;
	public static final Identity<MessagesRecord, UShort> IDENTITY_MESSAGES = Identities0.IDENTITY_MESSAGES;
	public static final Identity<WebLostPasswordRecord, Integer> IDENTITY_WEB_LOST_PASSWORD = Identities0.IDENTITY_WEB_LOST_PASSWORD;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
	public static final UniqueKey<BuildingsRecord> KEY_BUILDINGS_PRIMARY = UniqueKeys0.KEY_BUILDINGS_PRIMARY;
	public static final UniqueKey<CitiesRecord> KEY_CITIES_PRIMARY = UniqueKeys0.KEY_CITIES_PRIMARY;
	public static final UniqueKey<EntitiesRecord> KEY_ENTITIES_PRIMARY = UniqueKeys0.KEY_ENTITIES_PRIMARY;
	public static final UniqueKey<MessagesRecord> KEY_MESSAGES_PRIMARY = UniqueKeys0.KEY_MESSAGES_PRIMARY;
	public static final UniqueKey<ResearchesRecord> KEY_RESEARCHES_PRIMARY = UniqueKeys0.KEY_RESEARCHES_PRIMARY;
	public static final UniqueKey<ResourcesRecord> KEY_RESOURCES_PRIMARY = UniqueKeys0.KEY_RESOURCES_PRIMARY;
	public static final UniqueKey<TaskBuildBuildingRecord> KEY_TASK_BUILD_BUILDING_PRIMARY = UniqueKeys0.KEY_TASK_BUILD_BUILDING_PRIMARY;
	public static final UniqueKey<TaskBuildEntityRecord> KEY_TASK_BUILD_ENTITY_PRIMARY = UniqueKeys0.KEY_TASK_BUILD_ENTITY_PRIMARY;
	public static final UniqueKey<TempAccountRecord> KEY_TEMP_ACCOUNT_PRIMARY = UniqueKeys0.KEY_TEMP_ACCOUNT_PRIMARY;
	public static final UniqueKey<WebLostPasswordRecord> KEY_WEB_LOST_PASSWORD_PRIMARY = UniqueKeys0.KEY_WEB_LOST_PASSWORD_PRIMARY;
	public static final UniqueKey<WebNewsRecord> KEY_WEB_NEWS_PRIMARY = UniqueKeys0.KEY_WEB_NEWS_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AccountRecord, UShort> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
		public static Identity<EntitiesRecord, UInteger> IDENTITY_ENTITIES = createIdentity(Entities.ENTITIES, Entities.ENTITIES.ID);
		public static Identity<MessagesRecord, UShort> IDENTITY_MESSAGES = createIdentity(Messages.MESSAGES, Messages.MESSAGES.ID);
		public static Identity<WebLostPasswordRecord, Integer> IDENTITY_WEB_LOST_PASSWORD = createIdentity(WebLostPassword.WEB_LOST_PASSWORD, WebLostPassword.WEB_LOST_PASSWORD.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, Account.ACCOUNT.ID);
		public static final UniqueKey<BuildingsRecord> KEY_BUILDINGS_PRIMARY = createUniqueKey(Buildings.BUILDINGS, Buildings.BUILDINGS.BASE_ID, Buildings.BUILDINGS.POSITION);
		public static final UniqueKey<CitiesRecord> KEY_CITIES_PRIMARY = createUniqueKey(Cities.CITIES, Cities.CITIES.ID);
		public static final UniqueKey<EntitiesRecord> KEY_ENTITIES_PRIMARY = createUniqueKey(Entities.ENTITIES, Entities.ENTITIES.ID);
		public static final UniqueKey<MessagesRecord> KEY_MESSAGES_PRIMARY = createUniqueKey(Messages.MESSAGES, Messages.MESSAGES.ID);
		public static final UniqueKey<ResearchesRecord> KEY_RESEARCHES_PRIMARY = createUniqueKey(Researches.RESEARCHES, Researches.RESEARCHES.PLAYER_ID);
		public static final UniqueKey<ResourcesRecord> KEY_RESOURCES_PRIMARY = createUniqueKey(Resources.RESOURCES, Resources.RESOURCES.CITY_ID);
		public static final UniqueKey<TaskBuildBuildingRecord> KEY_TASK_BUILD_BUILDING_PRIMARY = createUniqueKey(TaskBuildBuilding.TASK_BUILD_BUILDING, TaskBuildBuilding.TASK_BUILD_BUILDING.ID);
		public static final UniqueKey<TaskBuildEntityRecord> KEY_TASK_BUILD_ENTITY_PRIMARY = createUniqueKey(TaskBuildEntity.TASK_BUILD_ENTITY, TaskBuildEntity.TASK_BUILD_ENTITY.ID);
		public static final UniqueKey<TempAccountRecord> KEY_TEMP_ACCOUNT_PRIMARY = createUniqueKey(TempAccount.TEMP_ACCOUNT, TempAccount.TEMP_ACCOUNT.LOGIN);
		public static final UniqueKey<WebLostPasswordRecord> KEY_WEB_LOST_PASSWORD_PRIMARY = createUniqueKey(WebLostPassword.WEB_LOST_PASSWORD, WebLostPassword.WEB_LOST_PASSWORD.ID);
		public static final UniqueKey<WebNewsRecord> KEY_WEB_NEWS_PRIMARY = createUniqueKey(WebNews.WEB_NEWS, WebNews.WEB_NEWS.ID);
	}
}
