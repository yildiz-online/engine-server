/*
 * This file is part of the Yildiz-Engine project, licenced under the MIT License  (MIT)
 *
 * Copyright (c) 2017 Gr√©gory Van den Borre
 *
 * More infos available: https://www.yildiz-games.be
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without
 * limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
 * OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  SOFTWARE.
 */

/**
 * This class is generated by jOOQ
 */
package be.yildiz.server.generated.database.tables;


import be.yildiz.server.generated.database.Keys;
import be.yildiz.server.generated.database.Yildizdatabase;
import be.yildiz.server.generated.database.tables.records.TempAccountRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TempAccount extends TableImpl<TempAccountRecord> {

    private static final long serialVersionUID = 1764176046;

    /**
     * The reference instance of <code>yildizdatabase.temp_account</code>
     */
    public static final TempAccount TEMP_ACCOUNT = new TempAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TempAccountRecord> getRecordType() {
        return TempAccountRecord.class;
    }

    /**
     * The column <code>yildizdatabase.temp_account.login</code>.
     */
    public final TableField<TempAccountRecord, String> LOGIN = createField("login", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>yildizdatabase.temp_account.password</code>.
     */
    public final TableField<TempAccountRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>yildizdatabase.temp_account.email</code>.
     */
    public final TableField<TempAccountRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>yildizdatabase.temp_account.check_value</code>.
     */
    public final TableField<TempAccountRecord, String> CHECK_VALUE = createField("check_value", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>yildizdatabase.temp_account.date</code>.
     */
    public final TableField<TempAccountRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>yildizdatabase.temp_account.complete</code>.
     */
    public final TableField<TempAccountRecord, Byte> COMPLETE = createField("complete", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>yildizdatabase.temp_account</code> table reference
     */
    public TempAccount() {
        this("temp_account", null);
    }

    /**
     * Create an aliased <code>yildizdatabase.temp_account</code> table reference
     */
    public TempAccount(String alias) {
        this(alias, TEMP_ACCOUNT);
    }

    private TempAccount(String alias, Table<TempAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private TempAccount(String alias, Table<TempAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Yildizdatabase.YILDIZDATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TempAccountRecord> getPrimaryKey() {
        return Keys.KEY_TEMP_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TempAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<TempAccountRecord>>asList(Keys.KEY_TEMP_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TempAccount as(String alias) {
        return new TempAccount(alias, this);
    }

    /**
     * Rename this table
     */
    public TempAccount rename(String name) {
        return new TempAccount(name, null);
    }
}
