/*
 * This file is part of the Yildiz-Engine project, licenced under the MIT License  (MIT)
 *
 * Copyright (c) 2017 Gr√©gory Van den Borre
 *
 * More infos available: https://www.yildiz-games.be
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without
 * limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
 * OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  SOFTWARE.
 */

/**
 * This class is generated by jOOQ
 */
package be.yildiz.server.generated.database.tables.records;


import be.yildiz.server.generated.database.tables.Researches;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UShort;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResearchesRecord extends UpdatableRecordImpl<ResearchesRecord> implements Record2<UShort, String> {

    private static final long serialVersionUID = 1461826491;

    /**
     * Setter for <code>yildizdatabase.researches.player_id</code>.
     */
    public void setPlayerId(UShort value) {
        set(0, value);
    }

    /**
     * Getter for <code>yildizdatabase.researches.player_id</code>.
     */
    public UShort getPlayerId() {
        return (UShort) get(0);
    }

    /**
     * Setter for <code>yildizdatabase.researches.researches_name</code>.
     */
    public void setResearchesName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>yildizdatabase.researches.researches_name</code>.
     */
    public String getResearchesName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UShort> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UShort, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UShort, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UShort> field1() {
        return Researches.RESEARCHES.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Researches.RESEARCHES.RESEARCHES_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort value1() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getResearchesName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchesRecord value1(UShort value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchesRecord value2(String value) {
        setResearchesName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearchesRecord values(UShort value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResearchesRecord
     */
    public ResearchesRecord() {
        super(Researches.RESEARCHES);
    }

    /**
     * Create a detached, initialised ResearchesRecord
     */
    public ResearchesRecord(UShort playerId, String researchesName) {
        super(Researches.RESEARCHES);

        set(0, playerId);
        set(1, researchesName);
    }
}
