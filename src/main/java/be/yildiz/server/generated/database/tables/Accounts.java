/**
 * This class is generated by jOOQ
 */
package be.yildiz.server.generated.database.tables;


import be.yildiz.server.generated.database.Keys;
import be.yildiz.server.generated.database.Yildizdatabase;
import be.yildiz.server.generated.database.tables.records.AccountsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Accounts extends TableImpl<AccountsRecord> {

    private static final long serialVersionUID = -534901532;

    /**
     * The reference instance of <code>YILDIZDATABASE.ACCOUNTS</code>
     */
    public static final Accounts ACCOUNTS = new Accounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsRecord> getRecordType() {
        return AccountsRecord.class;
    }

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.ID</code>.
     */
    public final TableField<AccountsRecord, UShort> ID = createField("ID", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.LOGIN</code>.
     */
    public final TableField<AccountsRecord, String> LOGIN = createField("LOGIN", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("a", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.PASSWORD</code>.
     */
    public final TableField<AccountsRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("a", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.TYPE</code>. 0 for regular player, 1 for GM, 2 for admin, 3 for webapp
     */
    public final TableField<AccountsRecord, UByte> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "0 for regular player, 1 for GM, 2 for admin, 3 for webapp");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.ONLINE</code>.
     */
    public final TableField<AccountsRecord, Boolean> ONLINE = createField("ONLINE", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.MAP_ID</code>.
     */
    public final TableField<AccountsRecord, UByte> MAP_ID = createField("MAP_ID", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.ACTIVE</code>. 0 if the player is deleted, 1 if exist in game
     */
    public final TableField<AccountsRecord, Boolean> ACTIVE = createField("ACTIVE", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "0 if the player is deleted, 1 if exist in game");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.EMAIL</code>.
     */
    public final TableField<AccountsRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("none@none.com", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>YILDIZDATABASE.ACCOUNTS.LAST_CONNECTION</code>.
     */
    public final TableField<AccountsRecord, Timestamp> LAST_CONNECTION = createField("LAST_CONNECTION", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>YILDIZDATABASE.ACCOUNTS</code> table reference
     */
    public Accounts() {
        this("ACCOUNTS", null);
    }

    /**
     * Create an aliased <code>YILDIZDATABASE.ACCOUNTS</code> table reference
     */
    public Accounts(String alias) {
        this(alias, ACCOUNTS);
    }

    private Accounts(String alias, Table<AccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Accounts(String alias, Table<AccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Yildizdatabase.YILDIZDATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AccountsRecord, UShort> getIdentity() {
        return Keys.IDENTITY_ACCOUNTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountsRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsRecord>>asList(Keys.KEY_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Accounts as(String alias) {
        return new Accounts(alias, this);
    }

    /**
     * Rename this table
     */
    public Accounts rename(String name) {
        return new Accounts(name, null);
    }
}
