/*
 * This file is generated by jOOQ.
*/
package be.yildiz.server.generated.database.tables;


import be.yildiz.server.generated.database.Keys;
import be.yildiz.server.generated.database.Yildizdatabase;
import be.yildiz.server.generated.database.tables.records.BuildingsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Buildings extends TableImpl<BuildingsRecord> {

    private static final long serialVersionUID = 1505089115;

    /**
     * The reference instance of <code>YILDIZDATABASE.BUILDINGS</code>
     */
    public static final Buildings BUILDINGS = new Buildings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BuildingsRecord> getRecordType() {
        return BuildingsRecord.class;
    }

    /**
     * The column <code>YILDIZDATABASE.BUILDINGS.CITY_ID</code>.
     */
    public final TableField<BuildingsRecord, UInteger> CITY_ID = createField("CITY_ID", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>YILDIZDATABASE.BUILDINGS.POSITION</code>.
     */
    public final TableField<BuildingsRecord, UByte> POSITION = createField("POSITION", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>YILDIZDATABASE.BUILDINGS.TYPE</code>.
     */
    public final TableField<BuildingsRecord, UByte> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>YILDIZDATABASE.BUILDINGS.LEVEL</code>.
     */
    public final TableField<BuildingsRecord, UByte> LEVEL = createField("LEVEL", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>YILDIZDATABASE.BUILDINGS.STAFF</code>.
     */
    public final TableField<BuildingsRecord, UShort> STAFF = createField("STAFF", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * Create a <code>YILDIZDATABASE.BUILDINGS</code> table reference
     */
    public Buildings() {
        this("BUILDINGS", null);
    }

    /**
     * Create an aliased <code>YILDIZDATABASE.BUILDINGS</code> table reference
     */
    public Buildings(String alias) {
        this(alias, BUILDINGS);
    }

    private Buildings(String alias, Table<BuildingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Buildings(String alias, Table<BuildingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Yildizdatabase.YILDIZDATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BuildingsRecord> getPrimaryKey() {
        return Keys.KEY_BUILDINGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BuildingsRecord>> getKeys() {
        return Arrays.<UniqueKey<BuildingsRecord>>asList(Keys.KEY_BUILDINGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Buildings as(String alias) {
        return new Buildings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Buildings rename(String name) {
        return new Buildings(name, null);
    }
}
