/*
 * This file is generated by jOOQ.
*/
package be.yildiz.server.generated.database;


import be.yildiz.server.generated.database.tables.Accounts;
import be.yildiz.server.generated.database.tables.Buildings;
import be.yildiz.server.generated.database.tables.Cities;
import be.yildiz.server.generated.database.tables.Databasechangelog;
import be.yildiz.server.generated.database.tables.Databasechangeloglock;
import be.yildiz.server.generated.database.tables.Entities;
import be.yildiz.server.generated.database.tables.Messages;
import be.yildiz.server.generated.database.tables.MissionsStatus;
import be.yildiz.server.generated.database.tables.Researches;
import be.yildiz.server.generated.database.tables.Resources;
import be.yildiz.server.generated.database.tables.TasksStatus;
import be.yildiz.server.generated.database.tables.TempAccounts;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Yildizdatabase extends SchemaImpl {

    private static final long serialVersionUID = -1373595203;

    /**
     * The reference instance of <code>YILDIZDATABASE</code>
     */
    public static final Yildizdatabase YILDIZDATABASE = new Yildizdatabase();

    /**
     * The table <code>YILDIZDATABASE.ACCOUNTS</code>.
     */
    public final Accounts ACCOUNTS = be.yildiz.server.generated.database.tables.Accounts.ACCOUNTS;

    /**
     * The table <code>YILDIZDATABASE.BUILDINGS</code>.
     */
    public final Buildings BUILDINGS = be.yildiz.server.generated.database.tables.Buildings.BUILDINGS;

    /**
     * The table <code>YILDIZDATABASE.CITIES</code>.
     */
    public final Cities CITIES = be.yildiz.server.generated.database.tables.Cities.CITIES;

    /**
     * The table <code>YILDIZDATABASE.DATABASECHANGELOG</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = be.yildiz.server.generated.database.tables.Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>YILDIZDATABASE.DATABASECHANGELOGLOCK</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = be.yildiz.server.generated.database.tables.Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>YILDIZDATABASE.ENTITIES</code>.
     */
    public final Entities ENTITIES = be.yildiz.server.generated.database.tables.Entities.ENTITIES;

    /**
     * The table <code>YILDIZDATABASE.MESSAGES</code>.
     */
    public final Messages MESSAGES = be.yildiz.server.generated.database.tables.Messages.MESSAGES;

    /**
     * The table <code>YILDIZDATABASE.MISSIONS_STATUS</code>.
     */
    public final MissionsStatus MISSIONS_STATUS = be.yildiz.server.generated.database.tables.MissionsStatus.MISSIONS_STATUS;

    /**
     * The table <code>YILDIZDATABASE.RESEARCHES</code>.
     */
    public final Researches RESEARCHES = be.yildiz.server.generated.database.tables.Researches.RESEARCHES;

    /**
     * The table <code>YILDIZDATABASE.RESOURCES</code>.
     */
    public final Resources RESOURCES = be.yildiz.server.generated.database.tables.Resources.RESOURCES;

    /**
     * The table <code>YILDIZDATABASE.TASKS_STATUS</code>.
     */
    public final TasksStatus TASKS_STATUS = be.yildiz.server.generated.database.tables.TasksStatus.TASKS_STATUS;

    /**
     * The table <code>YILDIZDATABASE.TEMP_ACCOUNTS</code>.
     */
    public final TempAccounts TEMP_ACCOUNTS = be.yildiz.server.generated.database.tables.TempAccounts.TEMP_ACCOUNTS;

    /**
     * No further instances allowed
     */
    private Yildizdatabase() {
        super("YILDIZDATABASE", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Accounts.ACCOUNTS,
            Buildings.BUILDINGS,
            Cities.CITIES,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            Entities.ENTITIES,
            Messages.MESSAGES,
            MissionsStatus.MISSIONS_STATUS,
            Researches.RESEARCHES,
            Resources.RESOURCES,
            TasksStatus.TASKS_STATUS,
            TempAccounts.TEMP_ACCOUNTS);
    }
}
