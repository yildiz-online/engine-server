/*
 * This file is generated by jOOQ.
*/
package be.yildiz.server.generated.database.tables.records;


import be.yildiz.server.generated.database.tables.Cities;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CitiesRecord extends UpdatableRecordImpl<CitiesRecord> implements Record3<UInteger, UInteger, String> {

    private static final long serialVersionUID = 1558117723;

    /**
     * Setter for <code>YILDIZDATABASE.CITIES.CIT_ID</code>.
     */
    public void setCitId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>YILDIZDATABASE.CITIES.CIT_ID</code>.
     */
    public UInteger getCitId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>YILDIZDATABASE.CITIES.ENT_ID</code>.
     */
    public void setEntId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>YILDIZDATABASE.CITIES.ENT_ID</code>.
     */
    public UInteger getEntId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>YILDIZDATABASE.CITIES.NAME</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>YILDIZDATABASE.CITIES.NAME</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Cities.CITIES.CIT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Cities.CITIES.ENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Cities.CITIES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getCitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getEntId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CitiesRecord value1(UInteger value) {
        setCitId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CitiesRecord value2(UInteger value) {
        setEntId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CitiesRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CitiesRecord values(UInteger value1, UInteger value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CitiesRecord
     */
    public CitiesRecord() {
        super(Cities.CITIES);
    }

    /**
     * Create a detached, initialised CitiesRecord
     */
    public CitiesRecord(UInteger citId, UInteger entId, String name) {
        super(Cities.CITIES);

        set(0, citId);
        set(1, entId);
        set(2, name);
    }
}
