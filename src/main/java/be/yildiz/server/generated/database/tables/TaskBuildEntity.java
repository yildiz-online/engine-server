/**
 * This class is generated by jOOQ
 */
package be.yildiz.server.generated.database.tables;


import be.yildiz.server.generated.database.Keys;
import be.yildiz.server.generated.database.Yildizdatabase;
import be.yildiz.server.generated.database.tables.records.TaskBuildEntityRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskBuildEntity extends TableImpl<TaskBuildEntityRecord> {

    private static final long serialVersionUID = 401119680;

    /**
     * The reference instance of <code>yildizdatabase.task_build_entity</code>
     */
    public static final TaskBuildEntity TASK_BUILD_ENTITY = new TaskBuildEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskBuildEntityRecord> getRecordType() {
        return TaskBuildEntityRecord.class;
    }

    /**
     * The column <code>yildizdatabase.task_build_entity.id</code>.
     */
    public final TableField<TaskBuildEntityRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>yildizdatabase.task_build_entity.owner_id</code>.
     */
    public final TableField<TaskBuildEntityRecord, UShort> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>yildizdatabase.task_build_entity.position</code>.
     */
    public final TableField<TaskBuildEntityRecord, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>yildizdatabase.task_build_entity.type</code>.
     */
    public final TableField<TaskBuildEntityRecord, UByte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>yildizdatabase.task_build_entity.time_left</code>.
     */
    public final TableField<TaskBuildEntityRecord, UInteger> TIME_LEFT = createField("time_left", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * Create a <code>yildizdatabase.task_build_entity</code> table reference
     */
    public TaskBuildEntity() {
        this("task_build_entity", null);
    }

    /**
     * Create an aliased <code>yildizdatabase.task_build_entity</code> table reference
     */
    public TaskBuildEntity(String alias) {
        this(alias, TASK_BUILD_ENTITY);
    }

    private TaskBuildEntity(String alias, Table<TaskBuildEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskBuildEntity(String alias, Table<TaskBuildEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Yildizdatabase.YILDIZDATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskBuildEntityRecord> getPrimaryKey() {
        return Keys.KEY_TASK_BUILD_ENTITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskBuildEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskBuildEntityRecord>>asList(Keys.KEY_TASK_BUILD_ENTITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskBuildEntity as(String alias) {
        return new TaskBuildEntity(alias, this);
    }

    /**
     * Rename this table
     */
    public TaskBuildEntity rename(String name) {
        return new TaskBuildEntity(name, null);
    }
}
