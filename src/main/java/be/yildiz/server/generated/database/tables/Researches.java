/**
 * This class is generated by jOOQ
 */
package be.yildiz.server.generated.database.tables;


import be.yildiz.server.generated.database.Keys;
import be.yildiz.server.generated.database.Yildizdatabase;
import be.yildiz.server.generated.database.tables.records.ResearchesRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Researches extends TableImpl<ResearchesRecord> {

	private static final long serialVersionUID = 1087694636;

	/**
	 * The reference instance of <code>yildizdatabase.researches</code>
	 */
	public static final Researches RESEARCHES = new Researches();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ResearchesRecord> getRecordType() {
		return ResearchesRecord.class;
	}

	/**
	 * The column <code>yildizdatabase.researches.player_id</code>.
	 */
	public final TableField<ResearchesRecord, UShort> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>yildizdatabase.researches.researches_name</code>.
	 */
	public final TableField<ResearchesRecord, String> RESEARCHES_NAME = createField("researches_name", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>yildizdatabase.researches</code> table reference
	 */
	public Researches() {
		this("researches", null);
	}

	/**
	 * Create an aliased <code>yildizdatabase.researches</code> table reference
	 */
	public Researches(String alias) {
		this(alias, RESEARCHES);
	}

	private Researches(String alias, Table<ResearchesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Researches(String alias, Table<ResearchesRecord> aliased, Field<?>[] parameters) {
		super(alias, Yildizdatabase.YILDIZDATABASE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ResearchesRecord> getPrimaryKey() {
		return Keys.KEY_RESEARCHES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ResearchesRecord>> getKeys() {
		return Arrays.<UniqueKey<ResearchesRecord>>asList(Keys.KEY_RESEARCHES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Researches as(String alias) {
		return new Researches(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Researches rename(String name) {
		return new Researches(name, null);
	}
}
